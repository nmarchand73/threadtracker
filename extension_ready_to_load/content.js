(()=>{"use strict";const e="undefined"!=typeof browser?browser:chrome;console.log("ThreadTracker content script loaded");const t=[{id:"1",subject:"Project Status Update",lastActivity:new Date(Date.now()-864e5).toISOString(),status:"active",participants:["john.doe@example.com","jane.smith@example.com"]},{id:"2",subject:"Budget Approval Request",lastActivity:new Date(Date.now()-432e6).toISOString(),status:"stalled",participants:["finance@example.com","your.email@example.com"]},{id:"3",subject:"Meeting Schedule for Next Week",lastActivity:new Date(Date.now()-6048e5).toISOString(),status:"stalled",participants:["team@example.com","your.email@example.com"]}];function o(){(window.location.href.includes("outlook.office")||window.location.href.includes("outlook.live"))&&(console.log("Outlook Web detected, initializing ThreadTracker"),setTimeout((()=>{console.log("Scanning for email threads..."),e.runtime.sendMessage({type:"THREADS_UPDATED",data:t},(e=>{e&&e.success&&(console.log("Thread data successfully sent to background script"),console.log("Adding visual indicators to Outlook UI"),console.log("Visual indicators would be added here in the actual implementation"))}))}),2e3))}e.runtime.onMessage.addListener(((o,a,i)=>("SCAN_THREADS"===o.type&&(console.log("Received request to scan threads"),e.runtime.sendMessage({type:"THREADS_UPDATED",data:t}),i({success:!0})),!0))),window.addEventListener("load",o);let a=window.location.href;new MutationObserver((()=>{a!==window.location.href&&(a=window.location.href,o())})).observe(document,{subtree:!0,childList:!0})})();